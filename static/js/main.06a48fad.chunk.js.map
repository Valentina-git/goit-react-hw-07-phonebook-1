{"version":3,"sources":["components/AppStyled.js","components/contactForm/ContactFormStyled.js","components/alert/AlertStyled.js","components/alert/Alert.js","redux/selectors/phonebookSelectors.js","redux/actions/phonebookActions.js","components/contactForm/ContactForm.js","redux/operations/phonebookOperations.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/App.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["AppWrapper","styled","div","FormWrapper","AlertBox","Alert","message","className","getContacts","state","phonebook","contacts","getFilter","filter","getFilteredContacts","createSelector","item","name","toLowerCase","includes","isLoading","loader","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactsRequest","getContactsSuccess","getContactsError","setFilter","initialState","number","ContactForm","useSelector","dispatch","useDispatch","useState","setState","alertMessage","setAlertMessage","showAlert","setShowAlert","handleInputChange","e","target","value","prevState","showAlertMessage","setTimeout","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","preventDefault","contact","user","some","element","length","a","axios","post","process","response","id","data","type","onChange","ContactLi","li","ContactListItem","classname","onClick","dataset","delete","operationDeleteContact","data-id","ContactListWrapper","ContactList","useEffect","get","Object","keys","map","key","TransitionGroup","component","propTypes","PropTypes","array","string","FilterWrapper","connect","App","loading","color","height","width","appear","contactsReducer","createReducer","payload","_","filterReducer","loaderReducer","errorReducer","phonebookReducer","combineReducers","error","rootReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"45DACA,IAsFeA,EAtFIC,IAAOC,IAAV,K,upBCAhB,IA2BeC,EA3BKF,IAAOC,IAAV,K,oQCAjB,IAaeE,EAbEH,IAAOC,IAAV,KCSCG,EARD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACE,cAAC,EAAD,UACE,mBAAGC,UAAU,YAAb,SAA0BD,O,QCJnBE,EAAc,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,UACvCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,UAAUG,QAErCC,EAAsBC,YAAe,CAACP,EAAaI,IAAY,SAACD,EAAUE,GACrF,OAAOF,EAASE,QAAO,SAAAG,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASN,EAAOK,qBAG5DE,EAAY,SAAAX,GAAK,OAAIA,EAAMC,UAAUW,Q,iDCNrCC,EAAoBC,YAAa,wBACjCC,EAAoBD,YAAa,wBACjCE,EAAkBF,YAAa,sBAE/BG,EAAuBH,YAAa,2BACpCI,EAAuBJ,YAAa,2BACpCK,EAAqBL,YAAa,yBAElCM,EAAqBN,YAAa,wBAClCO,EAAqBP,YAAa,wBAClCQ,EAAmBR,YAAa,sBAEhCS,EAAYT,YAAa,uBCNhCU,EAAe,CACnBhB,KAAM,GACNiB,OAAQ,IAgEKC,EA9DK,WAClB,IAAMxB,EAAWyB,YAAY5B,GACvB6B,EAAWC,cAFO,EAGEC,mBAAS,eAAKN,IAHhB,mBAGjBxB,EAHiB,KAGV+B,EAHU,OAIgBD,mBAAS,IAJzB,mBAIjBE,EAJiB,KAIHC,EAJG,OAKUH,oBAAS,GALnB,mBAKjBI,EALiB,KAKNC,EALM,KAMlBC,EAAoB,SAAAC,GAAM,IAAD,EACLA,EAAEC,OAAlB9B,EADqB,EACrBA,KAAM+B,EADe,EACfA,MACdR,GAAS,SAAAS,GAAS,kCAAUA,GAAV,kBAAsBhC,EAAO+B,QAqB3CE,EAAmB,SAAA5C,GACvBoC,EAAgBpC,GAChBsC,GAAa,GACbO,YAAW,WACTP,GAAa,KACZ,KACHO,YAAW,WACTT,EAAgB,MACf,OAEGzB,EAAiBR,EAAjBQ,KAAMiB,EAAWzB,EAAXyB,OACd,OACE,eAAC,EAAD,WACE,cAACkB,EAAA,EAAD,CAAeC,GAAIV,EAAWW,QAAS,IAAKC,WAAW,WAAWC,eAAa,EAA/E,SACE,cAAC,EAAD,CAAOlD,QAASmC,MAElB,uBAAMgB,SAnCW,SAAAX,GACnBA,EAAEY,iBACF,ICX+BC,EDWzBC,EAAO,CAAE3C,KAAMR,EAAMQ,KAAMiB,OAAQzB,EAAMyB,QAC3CvB,EAASkD,MAAK,SAAAC,GAAO,OAAIA,EAAQ7C,OAAS2C,EAAK3C,QACjDiC,EAAiB,GAAD,OAAIU,EAAK3C,KAAT,4BAGb2C,EAAK3C,KAAK8C,OAIVH,EAAK1B,OAAO6B,QAKjB1B,GCzB+BsB,EDyBFC,ECzBS,uCAAI,WAAMvB,GAAN,eAAA2B,EAAA,6DAC5C3B,EAASf,KADmC,kBAGnB2C,IAAMC,KAAN,UAAcC,sEAAd,kBAA8DR,GAH3C,OAGpCS,EAHoC,OAI1C/B,EAASb,EAAkB,2BAAKmC,GAAN,IAAeU,GAAID,EAASE,KAAKrD,SAJjB,gDAM1CoB,EAASZ,EAAgB,EAAD,KANkB,yDAAJ,wDD0BtCe,EAAS,eAAKP,KALZiB,EAAiB,yBAJjBA,EAAiB,wBA2BjB,UACE,wBAAO3C,UAAU,aAAjB,iBAEE,uBAAOA,UAAU,aAAagE,KAAK,OAAOtD,KAAK,OAAO+B,MAAO/B,EAAMuD,SAAU3B,OAE/E,wBAAOtC,UAAU,aAAjB,mBAEE,uBAAOA,UAAU,aAAagE,KAAK,OAAOtD,KAAK,SAAS+B,MAAOd,EAAQsC,SAAU3B,OAEnF,wBAAQtC,UAAU,cAAcgE,KAAK,SAArC,gC,6uBEjER,IA4BeE,EA5BGxE,IAAOyE,GAAV,KC8BAC,EAvBS,SAAC,GAAc,IAAZ3D,EAAW,EAAXA,KACnBL,EAAWyB,YAAYtB,GACvBD,EAASuB,YAAYxB,GACrByB,EAAWC,cASjB,OACE,eAAC,EAAD,CAAWsC,UAAU,oBAArB,UACE,uBAAMrE,UAAU,oBAAhB,UAAqCS,EAAKC,KAA1C,QACA,sBAAMV,UAAU,sBAAhB,SAAuCS,EAAKkB,SAC5C,wBAAQ3B,UAAU,sBAAsBgE,KAAK,SAASM,QAZnC,SAAA/B,GACrB,IAAMuB,EAAKvB,EAAEC,OAAO+B,QAAQT,GAC5BhC,EF0BkC,SAAAgC,GAAE,8CAAI,WAAMhC,GAAN,SAAA2B,EAAA,6DAC1C3B,EAASX,KADiC,kBAGlCuC,IAAMc,OAAN,UAAgBZ,sEAAhB,qBAA2DE,EAA3D,UAHkC,OAIxChC,EAASV,EAAqB0C,IAJU,gDAMxChC,EAAST,EAAmB,EAAD,KANa,yDAAJ,sDE1B3BoD,CAAuBX,IAE5B1D,EAASE,QAAO,SAAAG,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASN,EAAOK,kBAAgB6C,OAAS,GAC3F1B,EAASL,EAAU,MAO4DiD,UAASjE,EAAKqD,GAA7F,8BAH4CrD,EAAKqD,K,yhBCpBvD,IAyBea,EAzBYjF,IAAOC,IAAV,K,QCgCTiF,GAxBK,WAClB,IAAMxE,EAAWyB,YAAYtB,GACvBD,EAASuB,YAAYxB,GACrByB,EAAWC,cAMjB,OALA8C,qBAAU,WACR/C,EJSgC,uCAAM,WAAMA,GAAN,iBAAA2B,EAAA,6DACxC3B,EAASR,KAD+B,kBAGfoC,IAAMoB,IAAN,UAAalB,sEAAb,mBAHe,QAGhCC,EAHgC,QAIzBE,MACL3D,EAAW2E,OAAOC,KAAKnB,EAASE,MAAMkB,KAAI,SAAAC,GAAG,kCAC9CrB,EAASE,KAAKmB,IADgC,IAEjDpB,GAAIoB,OAGNpD,EAASP,EAAmBnB,KACvB0B,EAASP,EAAmB,KAXG,gDAatCO,EAASN,EAAiB,EAAD,KAba,yDAAN,yDIP/B,IAGD,cAAC,EAAD,UACE,cAAC2D,EAAA,EAAD,CAAiBC,UAAU,KAAKpF,UAAU,OAA1C,SACGI,EACEE,QAAO,SAAAG,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASN,EAAOK,kBACvDsE,KAAI,SAAAxE,GAAI,OACP,cAACoC,EAAA,EAAD,CAA6BE,QAAS,IAAKC,WAAW,eAAtD,SACE,cAAC,EAAD,CAAiBvC,KAAMA,KADLA,EAAKqD,Y,gPAUrCM,EAAgBiB,UAAY,CAC1BjF,SAAUkF,IAAUC,MACpBjF,OAAQgF,IAAUE,QCnCpB,I,SAYeC,GAZO/F,IAAOC,IAAV,MCgCJ+F,gBAbS,SAAAxF,GACtB,MAAO,CACLI,OAAQJ,EAAMC,UAAUG,WAGD,SAAAwB,GACzB,MAAO,CACLL,UAAW,SAAAgB,GACTX,EAASL,EAAUgB,QAKViD,EA5BA,SAAC,GAA2B,IAAzBjE,EAAwB,EAAxBA,UAAWnB,EAAa,EAAbA,OAK3B,OACE,cAAC,GAAD,UACE,wBAAON,UAAU,eAAjB,2BAEE,uBAAOA,UAAU,eAAegE,KAAK,OAAOtD,KAAK,SAAS+B,MAAOnC,EAAQ2D,SARxD,SAAA1B,GAAM,IACnBE,EAAUF,EAAEC,OAAZC,MACRhB,EAAUgB,cC8BCkD,GA3BH,WACV,IAAMvF,EAAWyB,YAAY5B,GACvB2F,EAAU/D,YAAYhB,GAE5B,OACE,eAAC,EAAD,WACG+E,GACC,qBAAK5F,UAAU,iBAAf,SACE,cAAC,IAAD,CAAQgE,KAAK,YAAY6B,MAAM,UAAUC,OAAQ,IAAKC,MAAO,IAAKhD,QAAS,QAG/E,cAACF,EAAA,EAAD,CAAeC,IAAI,EAAMkD,QAAQ,EAAMjD,QAAS,IAAKC,WAAW,WAAWC,eAAa,EAAxF,SACE,oBAAIjD,UAAU,aAAd,yBAGF,cAAC,EAAD,IAEA,oBAAIA,UAAU,iBAAd,sBACA,cAAC6C,EAAA,EAAD,CAAeC,GAAI1C,EAASoD,OAAS,EAAGT,QAAS,IAAKC,WAAW,YAAYC,eAAa,EAA1F,SACE,cAAC,GAAD,MAGF,cAAC,GAAD,Q,iBCbAgD,GAAkBC,YAAc,IAAD,qBAClCjF,GANkB,SAACf,EAAD,OAAUiG,EAAV,EAAUA,QAAV,6BAA4BjG,GAA5B,CAAmCiG,OAKnB,eAElC/E,GANqB,SAAClB,EAAD,OAAUiG,EAAV,EAAUA,QAAV,oBAA4BjG,EAAMI,QAAO,SAAAG,GAAI,OAAIA,EAAKqD,KAAOqC,SAIhD,eAGlC5E,GAL0B,SAAC6E,EAAD,OAAMD,EAAN,EAAMA,QAAN,oBAAwBA,MAEhB,KAK/BE,GAAgBH,YAAc,GAAD,eAChCzE,GATiB,SAAC2E,EAAD,YAAMD,YAYpBG,GAAgBJ,aAAc,GAAD,qBAChCnF,GAAoB,kBAAM,KADM,eAEhCE,GAAoB,kBAAM,KAFM,eAGhCC,GAAkB,kBAAM,KAHQ,eAIhCC,GAAuB,kBAAM,KAJG,eAKhCC,GAAuB,kBAAM,KALG,eAMhCC,GAAqB,kBAAM,KANK,eAOhCC,GAAqB,kBAAM,KAPK,eAQhCC,GAAqB,kBAAM,KARK,eAShCC,GAAmB,kBAAM,KATO,KAW7B+E,GAAeL,YAAc,MAAD,qBAC/BhF,GAAkB,SAACkF,EAAD,YAAMD,WADO,eAE/B9E,GAAqB,SAAC+E,EAAD,YAAMD,WAFI,eAG/B3E,GAAmB,SAAC4E,EAAD,YAAMD,WAHM,KAanBK,GAPUC,aAAgB,CACvCrG,SAAU6F,GACV3F,OAAQ+F,GACRvF,OAAQwF,GACRI,MAAOH,KC3CMI,GAJKF,aAAgB,CAClCtG,UAAWqG,KCOEI,GAJDC,YAAe,CAC3BC,QAASH,KCAXI,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.06a48fad.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nconst AppWrapper = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .page-title {\r\n    margin-bottom: 20px;\r\n  }\r\n  .contacts-title {\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    overflow: hidden;\r\n  }\r\n  .loader-wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n\r\n  .my-title-appear {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .my-title-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms;\r\n  }\r\n  .my-title-exit {\r\n    opacity: 1;\r\n  }\r\n  .my-title-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n  }\r\n  .my-filter-enter {\r\n    opacity: 0;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  .my-filter-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 250ms;\r\n  }\r\n  .my-filter-exit {\r\n    opacity: 1;\r\n  }\r\n  .my-filter-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms;\r\n  }\r\n  .my-alert-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .my-alert-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .my-alert-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .my-alert-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\nexport default AppWrapper;\r\n","import styled from 'styled-components';\r\nconst FormWrapper = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n\r\n  /* margin: 0 auto; */\r\n  background-color: #efefef;\r\n  .form-label {\r\n    font-weight: 700;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .form-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .form-button {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .form-button:hover,\r\n  .form-button:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default FormWrapper;\r\n","import styled from 'styled-components';\r\nconst AlertBox = styled.div`\r\n  padding: 15px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 40px;\r\n  background-color: tomato;\r\n  max-width: 450px;\r\n\r\n  border-radius: 5px;\r\n  .alertText {\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport default AlertBox;\r\n","import PropTypes from 'prop-types';\r\nimport AlertBox from './AlertStyled';\r\nconst Alert = ({ message }) => {\r\n  return (\r\n    <AlertBox>\r\n      <p className=\"alertText\">{message}</p>\r\n    </AlertBox>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n\r\nexport const isLoading = state => state.phonebook.loader;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('phonebook/addRequest');\r\nexport const addContactSuccess = createAction('phonebook/addSuccess');\r\nexport const addContactError = createAction('phonebook/addError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteError');\r\n\r\nexport const getContactsRequest = createAction('phonebook/getRequest');\r\nexport const getContactsSuccess = createAction('phonebook/getSuccess');\r\nexport const getContactsError = createAction('phonebook/getError');\r\n\r\nexport const setFilter = createAction('phonebook/setFilter');\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport FormWrapper from './ContactFormStyled';\r\nimport Alert from '../alert/Alert';\r\nimport { getContacts } from '../../redux/selectors/phonebookSelectors';\r\nimport { operationAddContact } from '../../redux/operations/phonebookOperations';\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ ...initialState });\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = { name: state.name, number: state.number };\r\n    if (contacts.some(element => element.name === user.name)) {\r\n      showAlertMessage(`${user.name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (!user.name.length) {\r\n      showAlertMessage('Please enter a name');\r\n      return;\r\n    }\r\n    if (!user.number.length) {\r\n      showAlertMessage('Please enter a number');\r\n      return;\r\n    }\r\n\r\n    dispatch(operationAddContact(user));\r\n    setState({ ...initialState });\r\n  };\r\n  const showAlertMessage = message => {\r\n    setAlertMessage(message);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n    setTimeout(() => {\r\n      setAlertMessage('');\r\n    }, 3250);\r\n  };\r\n  const { name, number } = state;\r\n  return (\r\n    <FormWrapper>\r\n      <CSSTransition in={showAlert} timeout={250} classNames=\"my-alert\" unmountOnExit>\r\n        <Alert message={alertMessage} />\r\n      </CSSTransition>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"form-label\">\r\n          Name\r\n          <input className=\"form-input\" type=\"text\" name=\"name\" value={name} onChange={handleInputChange} />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          Number\r\n          <input className=\"form-input\" type=\"text\" name=\"number\" value={number} onChange={handleInputChange} />\r\n        </label>\r\n        <button className=\"form-button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n// ContactForm.propTypes = {\r\n//   addNewContact: PropTypes.func.isRequired,\r\n// };\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n} from '../actions/phonebookActions';\r\n\r\nexport const operationAddContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json`, contact);\r\n    dispatch(addContactSuccess({ ...contact, id: response.data.name }));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const operationGetContacts = () => async dispatch => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`);\r\n    if (response.data) {\r\n      const contacts = Object.keys(response.data).map(key => ({\r\n        ...response.data[key],\r\n        id: key,\r\n      }));\r\n\r\n      dispatch(getContactsSuccess(contacts));\r\n    } else dispatch(getContactsSuccess([]));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const operationDeleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\nconst ContactLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n  border: 1px solid navy;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  .contact-list-name {\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n  .contact-list-number {\r\n    margin-right: 10px;\r\n  }\r\n  .contact-list-button {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .contact-list-button:hover,\r\n  .contact-list-button:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default ContactLi;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactLi from './ContactListItemStyled';\r\nimport { getFilter, getFilteredContacts } from '../../../redux/selectors/phonebookSelectors';\r\nimport { setFilter } from '../../../redux/actions/phonebookActions';\r\nimport { operationDeleteContact } from '../../../redux/operations/phonebookOperations';\r\nconst ContactListItem = ({ item }) => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onHandleDelete = e => {\r\n    const id = e.target.dataset.id;\r\n    dispatch(operationDeleteContact(id));\r\n\r\n    if (contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())).length < 2) {\r\n      dispatch(setFilter(''));\r\n    }\r\n  };\r\n  return (\r\n    <ContactLi classname=\"contact-list-item\" key={item.id}>\r\n      <span className=\"contact-list-name\">{item.name}: </span>\r\n      <span className=\"contact-list-number\">{item.number}</span>\r\n      <button className=\"contact-list-button\" type=\"button\" onClick={onHandleDelete} data-id={item.id}>\r\n        Delete contact\r\n      </button>\r\n    </ContactLi>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\nContactListItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst ContactListWrapper = styled.div`\r\n  padding: 10px 0;\r\n  li:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .my-list-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .my-list-item-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .my-list-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .my-list-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\nexport default ContactListWrapper;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ContactListItem from './contactListItem/ContactListItem';\r\nimport ContactListWrapper from './ContactListStyled';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { getFilter, getFilteredContacts } from '../../redux/selectors/phonebookSelectors';\r\nimport { operationGetContacts } from '../../redux/operations/phonebookOperations';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(operationGetContacts());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <ContactListWrapper>\r\n      <TransitionGroup component=\"ul\" className=\"list\">\r\n        {contacts\r\n          .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n          .map(item => (\r\n            <CSSTransition key={item.id} timeout={250} classNames=\"my-list-item\">\r\n              <ContactListItem item={item} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\nconst FilterWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  .filter-label {\r\n    font-weight: 700;\r\n    display: block;\r\n  }\r\n  .filter-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\nexport default FilterWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setFilter } from '../../redux/actions/phonebookActions';\r\nimport FilterWrapper from './FilterStyled';\r\nconst Filter = ({ setFilter, filter }) => {\r\n  const onHandleChange = e => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n  return (\r\n    <FilterWrapper>\r\n      <label className=\"filter-label\">\r\n        Search by name\r\n        <input className=\"filter-input\" type=\"text\" name=\"filter\" value={filter} onChange={onHandleChange} />\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.phonebook.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n","import React from 'react';\nimport AppWrapper from './AppStyled';\nimport { CSSTransition } from 'react-transition-group';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { getContacts, isLoading } from '../redux/selectors/phonebookSelectors';\n\nconst App = () => {\n  const contacts = useSelector(getContacts);\n  const loading = useSelector(isLoading);\n\n  return (\n    <AppWrapper>\n      {loading && (\n        <div className=\"loader-wrapper\">\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\n        </div>\n      )}\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"my-title\" unmountOnExit>\n        <h1 className=\"page-title\">Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      <h2 className=\"contacts-title\">Contacts</h2>\n      <CSSTransition in={contacts.length > 1} timeout={250} classNames=\"my-filter\" unmountOnExit>\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  getContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  setFilter,\r\n} from '../actions/phonebookActions';\r\n\r\nconst onAddContact = (state, { payload }) => [...state, payload];\r\nconst onDeleteContact = (state, { payload }) => [...state.filter(item => item.id !== payload)];\r\nconst onSetFilter = (_, { payload }) => payload;\r\nconst onGetInitialContacts = (_, { payload }) => [...payload];\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContactSuccess]: onAddContact,\r\n  [deleteContactSuccess]: onDeleteContact,\r\n  [getContactsSuccess]: onGetInitialContacts,\r\n});\r\nconst filterReducer = createReducer('', {\r\n  [setFilter]: onSetFilter,\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n});\r\nconst errorReducer = createReducer(null, {\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [getContactsError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { combineReducers } from 'redux';\r\nimport phonebookReducer from './phonebookReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// import { createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}